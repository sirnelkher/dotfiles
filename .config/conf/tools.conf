# vim:ft=sh
BIN=/usr/local/bin
TMP=/tmp

[[ ! -d $BIN ]] && mkdir -p $BIN

#BITWARDEN
#Password manager
#https://bitwarden.com/
#if [ ! -f $BIN/bw ]; then
#  wget 'https://github.com/bitwarden/cli/releases/download/v1.18.1/bw-linux-1.18.1.zip' -O ${TMP}/bitwarden.zip
#  unzip -o ${TMP}/bitwarden.zip -d $TMP
#  sudo mv ${TMP}/bw $BIN
#fi

#Consul
#https://www.consul.io/
#Consul uses service identities and traditional networking practices to help organizations securely connect applications running in any environment.
#if [ ! -f $BIN/consul ]; then
#  wget 'https://releases.hashicorp.com/consul/1.10.3+ent/consul_1.10.3+ent_linux_amd64.zip' -O ${TMP}/consul.zip
#  unzip -o ${TMP}/consul.zip -d $TMP
#  sudo mv ${TMP}/consul $BIN
#fi

#HELM
#https://github.com/helm/helm
#Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.
if [ ! -f $BIN/helm ]; then
  wget https://get.helm.sh/helm-v2.13.1-linux-amd64.tar.gz -O ${TMP}/helm-2.13.tar.gz
  tar xf ${TMP}/helm-2.13.tar.gz -C $TMP
  sudo mv ${TMP}/linux-amd64/helm $BIN
fi

if [ ! -f $BIN/helm-2.16 ]; then
  wget https://get.helm.sh/helm-v2.16.12-linux-amd64.tar.gz -O ${TMP}/helm-2.16.tar.gz
  tar xf ${TMP}/helm-2.16.tar.gz -C $TMP
  sudo mv ${TMP}/linux-amd64/helm $BIN/helm-2.16
fi

if [ ! -f $BIN/helm-3.5 ]; then
  wget https://get.helm.sh/helm-v3.5.3-linux-amd64.tar.gz -O ${TMP}/helm-3.5.tar.gz
  tar xf ${TMP}/helm-3.5.tar.gz -C $TMP
  sudo mv ${TMP}/linux-amd64/helm $BIN/helm-3.5
fi

#HUGO
#https://gohugo.io/about/what-is-hugo/
#fast and modern static site generator written in Go
#if [ ! -f $BIN/hugo ]; then
#  wget https://github.com/gohugoio/hugo/releases/download/v0.88.1/hugo_extended_0.88.1_Linux-64bit.tar.gz -O ${TMP}/hugo.tar.gz
#  tar xf ${TMP}/hugo.tar.gz -C $TMP
#  sudo mv ${TMP}/hugo $BIN
#fi

#K9S
#https://github.com/derailed/k9s
#terminal UI to interact with your Kubernetes clusters
if [ ! -f $BIN/k9s ]; then
  wget https://github.com/derailed/k9s/releases/download/v0.24.15/k9s_Linux_x86_64.tar.gz -O ${TMP}/k9s.tar.gz
  tar xf ${TMP}/k9s.tar.gz -C $TMP
  sudo mv ${TMP}/k9s $BIN
fi

#KUBEBUILDER
#https://github.com/kubernetes-sigs/kubebuilder
#Kubebuilder is a framework for building Kubernetes APIs using custom resource definitions (CRDs).
#if [ ! -f $BIN/kubebuilder ]; then
#  sudo wget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v3.1.0/kubebuilder_linux_amd64 -O $BIN/kubebuilder
#fi

#KUBECTL
#https://kubernetes.io/docs/tasks/tools/#kubectl
#Kubernetes command-line tool
if [ ! -f $BIN/kubectl ]; then
  sudo wget https://dl.k8s.io/release/v1.22.2/bin/linux/amd64/kubectl -O $BIN/kubectl
fi

#KUBESWITCH - Chung made this!
#https://github.com/trankchung/kubeswitch
#Kubernetes context and namespace switching with style. Inspired by Kubie with additional features that Kubie lacks.
if [ ! -f $BIN/kubeswitch ]; then
  wget https://github.com/trankchung/kubeswitch/releases/download/v0.2.4/kubeswitch_0.2.4_Linux_x86_64.tar.gz -O ${TMP}/kubeswitch.tar.gz
  tar xf ${TMP}/kubeswitch.tar.gz -C $TMP
  sudo mv ${TMP}/kubeswitch $BIN
fi

#OPEN POLICY AGENT
#https://github.com/open-policy-agent/opa
#policy engine that enables unified, context-aware policy enforcement across the entire stack.
#if [ ! -f $BIN/opa ]; then
#  sudo wget https://github.com/open-policy-agent/opa/releases/download/v0.32.1/opa_linux_amd64 -O ${BIN}/opa
#fi

#OTEL COLLECTOR
#https://github.com/open-telemetry/opentelemetry-collector
#vendor-agnostic implementation on how to receive, process and export telemetry data
#if [ ! -f $BIN/otel ]; then
#  sudo wget https://github.com/open-telemetry/opentelemetry-collector-contrib/releases/download/v0.36.0/otelcontribcol_linux_amd64 -O ${BIN}/otel
#fi

#POPEYE
#https://github.com/derailed/popeye
#scans live Kubernetes cluster and reports potential issues with deployed resources and configurations
if [ ! -f $BIN/popeye ]; then
  wget https://github.com/derailed/popeye/releases/download/v0.9.7/popeye_Linux_x86_64.tar.gz -O ${TMP}/popeye.tar.gz
  tar xf ${TMP}/popeye.tar.gz -C $TMP
  sudo mv ${TMP}/popeye $BIN
fi

#TERRAFORM
#https://www.terraform.io/
#open-source infrastructure as code software tool
if [ ! -f $BIN/terraform ]; then
  wget https://releases.hashicorp.com/terraform/1.0.8/terraform_1.0.8_linux_amd64.zip -O ${TMP}/terraform.zip
  unzip -o ${TMP}/terraform.zip -d $TMP
  sudo mv ${TMP}/terraform $BIN
fi

#TERRAGRUNT
#https://terragrunt.gruntwork.io/
#thin wrapper that provides extra tools for keeping your configurations DRY, working with multiple Terraform modules, and managing remote state.
if [ ! -f $BIN/terragrunt ]; then
  sudo wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.33.0/terragrunt_linux_amd64 -O ${BIN}/terragrunt
fi

#THEMES.SH
#https://github.com/lemnos/theme.sh
#One theme script to rule them all.
if [ ! -f $BIN/theme.sh ]; then
  sudo wget https://raw.githubusercontent.com/lemnos/theme.sh/master/theme.sh -O ${BIN}/theme.sh
fi

#VAULT
#https://www.vaultproject.io/
#Secure, store and tightly control access to tokens, passwords, certificates, encryption keys for protecting secrets and other sensitive data using a UI, CLI, or HTTP API.
#if [ ! -f $BIN/vault ]; then
#  wget 'https://releases.hashicorp.com/vault/1.6.4+ent/vault_1.6.4+ent_linux_amd64.zip' -O ${TMP}/vault.zip
#  unzip -o ${TMP}/vault.zip -d $TMP
#  sudo mv ${TMP}/vault $BIN
#fi

#FZF
#https://github.com/junegunn/fzf
#command-line fuzzy finder.
if [ ! -f ~/.fzf/bin/fzf ]; then
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
fi

#Powershell
#https://docs.microsoft.com/en-us/powershell/scripting/install/install-centos?view=powershell-7.2
if [ ! -f /usr/bin/pwsh ]; then
  # Register the Microsoft RedHat repository
  curl https://packages.microsoft.com/config/rhel/8/prod.repo | sudo tee /etc/yum.repos.d/microsoft.repo

  # Install PowerShell
  sudo yum install -y powershell
fi

#AWS CLI
if [ ! -f /usr/local/bin/aws ]; then
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  unzip awscliv2.zip
  sudo ./aws/install
fi

sudo chown root:root $BIN/*
sudo chmod +x $BIN/*
